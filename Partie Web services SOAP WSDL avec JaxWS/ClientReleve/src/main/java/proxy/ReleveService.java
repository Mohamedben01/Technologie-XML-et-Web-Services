
package proxy;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ReleveService", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ReleveService {


    /**
     * 
     * @return
     *     returns proxy.Releve
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReleves", targetNamespace = "http://ws/", className = "proxy.GetReleves")
    @ResponseWrapper(localName = "getRelevesResponse", targetNamespace = "http://ws/", className = "proxy.GetRelevesResponse")
    @Action(input = "http://ws/ReleveService/getRelevesRequest", output = "http://ws/ReleveService/getRelevesResponse")
    public Releve getReleves();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<proxy.Operation>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "operationsByType", targetNamespace = "http://ws/", className = "proxy.OperationsByType")
    @ResponseWrapper(localName = "operationsByTypeResponse", targetNamespace = "http://ws/", className = "proxy.OperationsByTypeResponse")
    @Action(input = "http://ws/ReleveService/operationsByTypeRequest", output = "http://ws/ReleveService/operationsByTypeResponse")
    public List<Operation> operationsByType(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
